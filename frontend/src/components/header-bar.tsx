'use client'

import Image from 'next/image'
import { Button } from '@/components/ui/button'
import { FileText, Download, Settings, Moon, Sun } from 'lucide-react'
import { useState, useEffect } from 'react'
import {
  DropdownMenu,
  DropdownMenuContent,
  DropdownMenuItem,
  DropdownMenuLabel,
  DropdownMenuSeparator,
  DropdownMenuTrigger,
} from '@/components/ui/dropdown-menu'
import { useResearch } from '@/components/research-context'

export function HeaderBar() {
  const [isDark, setIsDark] = useState(false)
  const { state: researchState } = useResearch()

  useEffect(() => {
    const isDarkMode = document.documentElement.classList.contains('dark')
    setIsDark(isDarkMode)
  }, [])

  const toggleTheme = () => {
    const newTheme = !isDark
    setIsDark(newTheme)
    document.documentElement.classList.toggle('dark')
    localStorage.setItem('theme', newTheme ? 'dark' : 'light')
  }

  const exportAsMarkdown = () => {
    const { sections } = researchState
    if (!sections || sections.length === 0) return

    let markdown = '# Research Document\n\n'
    markdown += '*Generated by Simba Research Agent*\n\n---\n\n'
    
    sections.forEach(section => {
      markdown += `## ${section.title}\n\n${section.content}\n\n`
      if (section.footer) {
        markdown += `${section.footer}\n\n`
      }
    })

    const blob = new Blob([markdown], { type: 'text/markdown' })
    const url = URL.createObjectURL(blob)
    const a = document.createElement('a')
    a.href = url
    a.download = 'research-document.md'
    a.click()
    URL.revokeObjectURL(url)
  }

  const exportAsPDF = () => {
    // Simple print dialog for PDF export
    window.print()
  }

  return (
    <div className="h-14 border-b border-border bg-background/95 backdrop-blur supports-[backdrop-filter]:bg-background/60">
      <div className="flex h-full items-center justify-between px-6">
        {/* Logo and Title */}
        <div className="flex items-center gap-3">
          <div className="relative h-8 w-8 text-primary">
            <Image
              src="/simba-logo.svg"
              alt="Simba Research"
              width={32}
              height={32}
              className="text-primary"
            />
          </div>
          <div className="flex flex-col">
            <h1 className="text-lg font-semibold leading-none">Simba Research</h1>
            <p className="text-xs text-muted-foreground">Professional Research Agent</p>
          </div>
        </div>

        {/* Actions */}
        <div className="flex items-center gap-2">
          <Button
            variant="ghost"
            size="icon"
            onClick={toggleTheme}
            className="h-9 w-9"
          >
            {isDark ? (
              <Sun className="h-4 w-4" />
            ) : (
              <Moon className="h-4 w-4" />
            )}
          </Button>

          <DropdownMenu>
            <DropdownMenuTrigger asChild>
              <Button variant="ghost" size="icon" className="h-9 w-9">
                <FileText className="h-4 w-4" />
              </Button>
            </DropdownMenuTrigger>
            <DropdownMenuContent align="end" className="w-48">
              <DropdownMenuLabel>Document</DropdownMenuLabel>
              <DropdownMenuSeparator />
              <DropdownMenuItem onClick={exportAsPDF}>
                <Download className="mr-2 h-4 w-4" />
                Export as PDF
              </DropdownMenuItem>
              <DropdownMenuItem onClick={exportAsMarkdown}>
                <Download className="mr-2 h-4 w-4" />
                Export as Markdown
              </DropdownMenuItem>
            </DropdownMenuContent>
          </DropdownMenu>

          <Button variant="ghost" size="icon" className="h-9 w-9">
            <Settings className="h-4 w-4" />
          </Button>
        </div>
      </div>
    </div>
  )
}